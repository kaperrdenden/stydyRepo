###### useCallback ######

- useMemo는 특정 결과값을 재사용할 때 사용하는 반면, useCallback은 특정 함수를 새로 만들지
않고 재사용하고 싶을 때 사용한다.
- 컴포넌트 내부의 함수들은 리렌더링 될 때마다 새로 선언된다. 이자체는 많은 리소스를 차지하는 것이
아니지만 그래도 이 함수들을 기억해서 재사용하는 것은 중요하다 
왜냐하면 함수를 props로 넘겨주는 많은데 이때 우리는 props가 변경되지 않으면
virtual dom에서 새롭게 렌더링 되지 않도록 최적화 작업을 해줄 수 있게된다. 그런데 매번
함수가 변경되고 그 함수를 props로 넘겨주게 되면 매번 리렌더링이 발생하기 때문에 props로 넘겨주는
함수는 useCallback을 이용해 함수를 재사용하는 것이 필수이다.
-useCallback함수를 사용하면 해당 컴포넌트가 렌더링 되더라도 그 함수가 의존하는 값들이 
바뀌지 않는 한 기존 함수를 계속해서 반환한다.
ex) const add = useCallback(() => x + y, [x, y]);
 만약 함수에 의존하는 값(x or y)이 바뀌면 함수가 생성되어 add변수에 할당되고 
 x, y값이 동일하다면 다음 렌더링 때 이 함수를 재사용한다.